<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
   <mapper namespace="kr.co.gf.member.dao.PtMemberDAO">
   
   <insert 
   		useGeneratedKeys="true"
      	keyColumn="dailypt_no"
      	keyProperty="dailypt_no"
   		id="submitdailypt"
   		parameterType="dailypt">
   		
   		insert into daily_pt (emp_no, mem_no, aerobic,  diet, str, pt_date, af_weight)
   		values(${emp_no},#{mem_no},#{aerobic},#{diet},#{str},#{pt_date},#{af_weight})
   
   </insert>
   
   <insert id="writeWeight">
	   insert into pt_weight (dailypt_no, pt_name, pt_kg, pt_set) 
	   		values(#{param1},#{param2},#{param3},#{param4})   
   </insert>
   

   
   <insert id="submitcut" parameterType="dailypt">
   	 insert into daily_pt (emp_no,mem_no, pt_date, pt_state)
   	 values(${emp_no},#{mem_no},#{pt_date},#{pt_state})

   </insert>
   
   
   
   <update id="ptcountUpdate">
   		    UPDATE pt_mem
    SET count = count - 1
    WHERE mem_no = #{mem_no}

   	
   </update>
  
   
    <update id="submitcutminus">
   		    UPDATE pt_mem
    SET count = count - 1
    WHERE mem_no = #{mem_no}

   	
   </update>
   
   <!-- 삭제 시 일지 count+! 해주기 -->
    <update id="plusptcount">
   		    UPDATE pt_mem
    SET count = count + 1
    WHERE mem_no = #{mem_no}

   	
   </update>
   
   
   <!-- 이건 등록했을 때 update 몸무게 -->
   <update id="updateaf_weight">
	    UPDATE pt_mem pm
	    JOIN daily_pt dp ON pm.mem_no = dp.mem_no
	    SET pm.weight = #{af_weight}
	    WHERE pm.mem_no = #{mem_no}
	</update>
   
   
   
   
	<!-- 이건 수정했을때 update 몸무게 -->
	<update id="updateupaf_weight">
	    UPDATE pt_mem pm
	    JOIN daily_pt dp ON pm.mem_no = dp.mem_no
	    SET pm.weight = #{af_weight}
	    WHERE pm.mem_no = #{mem_no}
	</update>
	

	
	
	<select id="dailyptwritego" resultType="dailypt" >
		
		SELECT
		    pt.regt_idx, pt.mem_no, m.name AS member_name
		FROM
		    pt_mem pt
		JOIN
		    registered_ticket r ON pt.mem_no = r.mem_no
		JOIN
		    member m ON m.mem_no = r.mem_no
		WHERE
		    r.emp_no = #{loginId};
	</select>
	

	
	 <select id="weightDetail" resultType="dailypt">
		SELECT
		    pt_name, pt_kg, pt_set, weight_no
		FROM
		    pt_weight
		    
		where dailypt_no = #{dailypt_no};    		  
		          
	</select>
   
   
   <select id="dailyPtDetail" resultType="dailypt">
   
   		select 
			dp.dailypt_no, dp.mem_no, dp.emp_no, dp.pt_date, dp.af_weight , dp.aerobic , dp.diet , dp.str, m.name AS member_name, e.name AS emp_name, dp.pt_state
			
		from daily_pt dp
		
		JOIN
		    member m ON dp.mem_no = m.mem_no
		JOIN
		    emp e ON dp.emp_no = e.emp_no
		    
		where dailypt_no = #{dailypt_no};

   </select>
   
   <!-- 웨이트 빼고 일지 업데이트 -->
   <update id="dailyptUpdate" parameterType="dailypt">
   		UPDATE daily_pt SET 
   			dailypt_no = #{dailypt_no}
   			,emp_no = ${emp_no}
   			,mem_no = ${mem_no}
   			,aerobic = #{aerobic}
			,diet = #{diet}
			,pt_date = #{pt_date}
			,af_weight = #{af_weight}
			,str = #{str}
			
		WHERE dailypt_no = #{dailypt_no};
   
   </update>
   
   
   
   <update id="UpdateWeight">
   
	   	UPDATE pt_weight SET 
	   	
	   			dailypt_no = #{param1}
	   			,pt_name = #{param2}
				,pt_kg = #{param3}
				,pt_set = #{param4}
				
			WHERE dailypt_no = #{dailypt_no} AND weight_no = #{param5};

   </update>
   
   <!-- 삭제 시 웨이트 일지 먼저 삭제 -->
	<delete id ="weightptdelete">
	
		DELETE FROM pt_weight WHERE dailypt_no = #{dailypt_no}

	</delete>
   
   
   <insert id="insertNewWeight">
	   insert into pt_weight (dailypt_no, pt_name, pt_kg, pt_set) 
	   		values(#{param1},#{param2},#{param3},#{param4}) 
	   		   
   </insert>
   
   
   <delete id="deletedaily_pt">
   
	  DELETE FROM pt_weight
	  WHERE dailypt_no = #{dailypt_no};
	
   
   </delete>
   
   
   <!-- 리스트에서 일지 삭제할 때 -->
   <delete id="ptdailydelete">
   
	  DELETE FROM daily_pt
	  WHERE dailypt_no = #{dailypt_no};
	
   
   </delete>
   
   
   <!-- ptstate 출석,결석 select해오기 -->
   <select id="getPtStateByDailyPtNo" resultType="dailypt">
	   		SELECT
			    pt_state
			FROM
			    daily_pt 
			    
			WHERE dailypt_no = #{dailypt_no}
	</select>
   
	
	<!-- 회원일지 삭제 웨이트 빼고 -->
   <delete id="dailyptdelete">
   
		DELETE FROM daily_pt WHERE dailypt_no = #{dailypt_no}
		
	</delete>
	
	
	
	<select id="ptmemSearch" resultType="dailypt" parameterType="hashmap">
	
		 
		 select dp.dailypt_no, dp.mem_no, dp.pt_date, dp.emp_no, m.name AS member_name, e.name AS emp_name, dp.pt_state
		 FROM daily_pt dp
		 	JOIN
			    member m ON dp.mem_no = m.mem_no
			JOIN
			    emp e ON dp.emp_no = e.emp_no

				where
				
				<if test="ptmember.equals('mem_no')">
		            m.mem_no LIKE #{searchInput}
		        </if>
				 <if test="ptmember.equals('member_name')">
		            m.name LIKE #{searchInput}
		        </if>
		        <if test="ptmember.equals('emp_name')">
		            e.name LIKE #{searchInput}
		        </if>
			

	</select>
	
	
	 <!--  <select id="pt_b_idx" resultType="int">
   		SELECT b_idx FROM emp WHERE emp_no = #{param1}
   		</select> -->
   		
   		
   		 <!--   <select id="dailyptlist" resultType="dailypt">
		SELECT
		    dp.dailypt_no, dp.mem_no, dp.pt_date, dp.emp_no, m.name AS member_name, e.name AS emp_name
		FROM
		    daily_pt dp
		JOIN
		    member m ON dp.mem_no = m.mem_no
		JOIN
		    emp e ON dp.emp_no = e.emp_no
	</select> -->
   		
   		
   		<select id="ptlist" resultType="dailypt">
	   		SELECT
			    dp.dailypt_no, dp.mem_no, dp.pt_date, dp.emp_no, m.name AS member_name, e.name AS emp_name, dp.pt_state
			FROM
			    daily_pt dp
			JOIN
			    member m ON dp.mem_no = m.mem_no
			JOIN
			    emp e ON dp.emp_no = e.emp_no
			
			ORDER BY dp.dailypt_no DESC
			
  		</select>

   
   </mapper>